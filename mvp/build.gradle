apply plugin: 'com.android.library'

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 3
        versionName "1.2.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
       }
    }
}

dependencies {
    compileOnly "com.android.support:appcompat-v7:26.1.0"
    testImplementation 'junit:junit:4.12'
}

task jarDelete(type: Delete) {
    delete 'build/jar/mvp.jar'
}
task jarMake(dependsOn :['compileReleaseJavaWithJavac','jarDelete'],type:Jar){

    archiveName = 'mvp.jar'
    from('build/intermediates/classes/release/')
    destinationDir = file('build/jar')
    exclude('android/**')
    exclude('**/R$*.class')
    exclude('**/R.class')
    exclude('**/BuildConfig.class')
    include('**/**.*')
}

//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    options.encoding "UTF-8"
//    options.charSet 'UTF-8'
//    options.author true
//    options.version true
////    options.links "https://github.com/linglongxin24/FastDev/tree/master/mylibrary/docs/javadoc"
//    failOnError false
//}


///** 以下开始是将Android Library上传到jcenter的相关配置**/
//apply plugin: 'com.novoda.bintray-release'//添加
////项目主页
//def siteUrl = 'https://bintray.com/afunc/android/mvp'
//publish{
//    repoName = 'android'//远程仓库名字,不指明，默认是上传到maven
//    userOrg = 'afunc'//bintray.com的用户名
//    groupId = 'org.afunc'//jcenter上的路径
//    artifactId = 'mvp'//项目名称
//    publishVersion = '1.2.1'//版本号
//    desc = '一种安卓MVP的实现方式'//描述，不重要
//    website = siteUrl//项目主页
//}
//tasks.withType(Javadoc) {//防止编码问题
//    options.addStringOption('Xdoclint:none', '-quiet')
//    options.addStringOption('encoding', 'UTF-8')
//    options.addStringOption('charSet', 'UTF-8')
//}




/** 以下开始是将Android Library上传到jcenter的相关配置**/

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

//项目主页
def siteUrl = 'https://bintray.com/afunc/android/mvp'    // project homepage
//项目的版本控制地址
def gitUrl = 'https://github.com/afunc/mvp.git' // project git

//发布到组织名称名字，必须填写
group = "org.afunc"
//发布到JCenter上的项目名字，必须填写
def libName = "mvp"
// 版本号，下次更新是只需要更改版本号即可
version = "1.2.1"
/**  上面配置后上传至jcenter后的编译路径是这样的： compile 'org.afunc:mvp:1.2.1'  **/

//生成源文件
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
//生成文档
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.encoding "UTF-8"
    options.charSet 'UTF-8'
    options.author true
    options.version true
//    options.links "https://github.com/linglongxin24/FastDev/tree/master/docs/javadoc"
    failOnError false
}

//文档打包成jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
//拷贝javadoc文件
task copyDoc(type: Copy) {
    from "${buildDir}/docs/"
    into "docs"
}

//上传到jcenter所需要的源码文件
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 配置maven库，生成POM.xml文件
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'jar'
                name '一种安卓MVP的实现方式'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'afunc'
                        name '紫紫'
                        email 'Q157596462@outolook.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

//上传到jcenter
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")    //读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty("bintray.apikey")   //读取 local.properties 文件里面的 bintray.apikey
    configurations = ['archives']
    pkg {
        repo = "android"
        name = libName    //发布到JCenter上的项目名字，必须填写
        desc = '一种安卓MVP的实现方式'    //项目描述
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}